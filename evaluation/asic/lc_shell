#!/usr/bin/env bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
PROJECT_DIR="${SCRIPT_DIR}/../.."

CONTAINER_SRC_PATH="/src"
CONTAINER_SYNOPSYS_PATH="/synopsys"
CONTAINER_WORK_PATH="/work"

LC_SHELL_PATH="${CONTAINER_SYNOPSYS_PATH}/lc/S-2021.06-SP5/bin/lc_shell"

SYNOPSYS_PATH_DEFAULT="${HOME}/synopsys"

if [[ -z "${SYNOPSYS_PATH}" ]]; then
  echo "SYNOPSYS_PATH is undefined, using default value: $SYNOPSYS_PATH_DEFAULT"
  SYNOPSYS_PATH="${SYNOPSYS_PATH_DEFAULT}"
fi

docker run -it --rm \
    -w ${CONTAINER_WORK_PATH} \
    --mount type=bind,src="${SYNOPSYS_PATH}",target=${CONTAINER_SYNOPSYS_PATH} \
    --mount type=bind,src="${PROJECT_DIR}",target=${CONTAINER_SRC_PATH} \
    --mount type=bind,src="${PWD}",target=${CONTAINER_WORK_PATH} \
    --env LM_LICENSE_FILE="${CONTAINER_SYNOPSYS_PATH}/license.dat" \
    --env STROOT="${CONTAINER_SYNOPSYS_PATH}/syn/S-2021.06-SP5" \
    --env SAED14="${CONTAINER_SYNOPSYS_PATH}/SAED14nm_PDK_12142021/stdcell_rvt/db_nldm" \
    --env SAED14_SRAM="${CONTAINER_SYNOPSYS_PATH}/SAED14nm_PDK_12142021/SAED14nm_EDK_SRAM_v_05072020/lib/sram/logic_synth" \
    synopsys ${LC_SHELL_PATH} $@
